// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: user.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmailLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Ip    string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *EmailLoginReq) Reset() {
	*x = EmailLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailLoginReq) ProtoMessage() {}

func (x *EmailLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailLoginReq.ProtoReflect.Descriptor instead.
func (*EmailLoginReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *EmailLoginReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmailLoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EmailLoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type PassLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Pass  string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	Ip    string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *PassLoginReq) Reset() {
	*x = PassLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassLoginReq) ProtoMessage() {}

func (x *PassLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassLoginReq.ProtoReflect.Descriptor instead.
func (*PassLoginReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *PassLoginReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PassLoginReq) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *PassLoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken  string `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	Nickname      string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarUrl     string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	NewMessageNum int64  `protobuf:"varint,5,opt,name=newMessageNum,proto3" json:"newMessageNum,omitempty"`
	NewDynamicNum int64  `protobuf:"varint,6,opt,name=newDynamicNum,proto3" json:"newDynamicNum,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *LoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResp) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *LoginResp) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *LoginResp) GetNewMessageNum() int64 {
	if x != nil {
		return x.NewMessageNum
	}
	return 0
}

func (x *LoginResp) GetNewDynamicNum() int64 {
	if x != nil {
		return x.NewDynamicNum
	}
	return 0
}

type QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *QueryReq) Reset() {
	*x = QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReq) ProtoMessage() {}

func (x *QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReq.ProtoReflect.Descriptor instead.
func (*QueryReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *QueryReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UserQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt    int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Email        string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Password     string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Nickname     string `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarUrl    string `protobuf:"bytes,8,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Signature    string `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`
	Power        int64  `protobuf:"varint,10,opt,name=power,proto3" json:"power,omitempty"`
	VipExpire    int64  `protobuf:"varint,11,opt,name=vipExpire,proto3" json:"vipExpire,omitempty"`
	Ip           string `protobuf:"bytes,12,opt,name=ip,proto3" json:"ip,omitempty"`
	IpLocation   string `protobuf:"bytes,13,opt,name=ipLocation,proto3" json:"ipLocation,omitempty"`
	Exp          int64  `protobuf:"varint,14,opt,name=exp,proto3" json:"exp,omitempty"`
	Level        int64  `protobuf:"varint,15,opt,name=level,proto3" json:"level,omitempty"`
	Coin         int64  `protobuf:"varint,16,opt,name=coin,proto3" json:"coin,omitempty"`
	FollowNum    int64  `protobuf:"varint,17,opt,name=followNum,proto3" json:"followNum,omitempty"`
	RefreshToken string `protobuf:"bytes,18,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
}

func (x *UserQueryResp) Reset() {
	*x = UserQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQueryResp) ProtoMessage() {}

func (x *UserQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQueryResp.ProtoReflect.Descriptor instead.
func (*UserQueryResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *UserQueryResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserQueryResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserQueryResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserQueryResp) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *UserQueryResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserQueryResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserQueryResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserQueryResp) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserQueryResp) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserQueryResp) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *UserQueryResp) GetVipExpire() int64 {
	if x != nil {
		return x.VipExpire
	}
	return 0
}

func (x *UserQueryResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UserQueryResp) GetIpLocation() string {
	if x != nil {
		return x.IpLocation
	}
	return ""
}

func (x *UserQueryResp) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *UserQueryResp) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserQueryResp) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *UserQueryResp) GetFollowNum() int64 {
	if x != nil {
		return x.FollowNum
	}
	return 0
}

func (x *UserQueryResp) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type UserHomeQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     int64    `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     int64    `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt     int64    `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Gender        string   `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthday      string   `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Tags          []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	TopImgNo      int64    `protobuf:"varint,9,opt,name=topImgNo,proto3" json:"topImgNo,omitempty"`
	Title         string   `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	Notice        string   `protobuf:"bytes,11,opt,name=notice,proto3" json:"notice,omitempty"`
	PostNum       int64    `protobuf:"varint,12,opt,name=postNum,proto3" json:"postNum,omitempty"`
	CollectionNum int64    `protobuf:"varint,13,opt,name=collectionNum,proto3" json:"collectionNum,omitempty"`
	FavlistNum    int64    `protobuf:"varint,14,opt,name=favlistNum,proto3" json:"favlistNum,omitempty"`
	FanNum        int64    `protobuf:"varint,15,opt,name=fanNum,proto3" json:"fanNum,omitempty"`
	LikeNum       int64    `protobuf:"varint,16,opt,name=likeNum,proto3" json:"likeNum,omitempty"`
	PlayNum       int64    `protobuf:"varint,17,opt,name=playNum,proto3" json:"playNum,omitempty"`
	ReadNum       int64    `protobuf:"varint,18,opt,name=readNum,proto3" json:"readNum,omitempty"`
}

func (x *UserHomeQueryResp) Reset() {
	*x = UserHomeQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHomeQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHomeQueryResp) ProtoMessage() {}

func (x *UserHomeQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHomeQueryResp.ProtoReflect.Descriptor instead.
func (*UserHomeQueryResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *UserHomeQueryResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserHomeQueryResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserHomeQueryResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserHomeQueryResp) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *UserHomeQueryResp) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserHomeQueryResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserHomeQueryResp) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserHomeQueryResp) GetTopImgNo() int64 {
	if x != nil {
		return x.TopImgNo
	}
	return 0
}

func (x *UserHomeQueryResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UserHomeQueryResp) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *UserHomeQueryResp) GetPostNum() int64 {
	if x != nil {
		return x.PostNum
	}
	return 0
}

func (x *UserHomeQueryResp) GetCollectionNum() int64 {
	if x != nil {
		return x.CollectionNum
	}
	return 0
}

func (x *UserHomeQueryResp) GetFavlistNum() int64 {
	if x != nil {
		return x.FavlistNum
	}
	return 0
}

func (x *UserHomeQueryResp) GetFanNum() int64 {
	if x != nil {
		return x.FanNum
	}
	return 0
}

func (x *UserHomeQueryResp) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *UserHomeQueryResp) GetPlayNum() int64 {
	if x != nil {
		return x.PlayNum
	}
	return 0
}

func (x *UserHomeQueryResp) GetReadNum() int64 {
	if x != nil {
		return x.ReadNum
	}
	return 0
}

type UserInteractionQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt           int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt           int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	PlayNum             int64  `protobuf:"varint,5,opt,name=playNum,proto3" json:"playNum,omitempty"`
	PlayNumIncr         int64  `protobuf:"varint,6,opt,name=playNumIncr,proto3" json:"playNumIncr,omitempty"`
	VideoCommentNum     int64  `protobuf:"varint,7,opt,name=videoCommentNum,proto3" json:"videoCommentNum,omitempty"`
	VideoCommentNumIncr int64  `protobuf:"varint,8,opt,name=videoCommentNumIncr,proto3" json:"videoCommentNumIncr,omitempty"`
	DanmuNum            int64  `protobuf:"varint,9,opt,name=danmuNum,proto3" json:"danmuNum,omitempty"`
	DanmuNumIncr        int64  `protobuf:"varint,10,opt,name=danmuNumIncr,proto3" json:"danmuNumIncr,omitempty"`
	VideoLikeNum        int64  `protobuf:"varint,11,opt,name=videoLikeNum,proto3" json:"videoLikeNum,omitempty"`
	VideoLikeNumIncr    int64  `protobuf:"varint,12,opt,name=videoLikeNumIncr,proto3" json:"videoLikeNumIncr,omitempty"`
	CoinNum             int64  `protobuf:"varint,13,opt,name=coinNum,proto3" json:"coinNum,omitempty"`
	CoinNumIncr         int64  `protobuf:"varint,14,opt,name=coinNumIncr,proto3" json:"coinNumIncr,omitempty"`
	VideoStarNum        int64  `protobuf:"varint,15,opt,name=videoStarNum,proto3" json:"videoStarNum,omitempty"`
	VideoStarNumIncr    int64  `protobuf:"varint,16,opt,name=videoStarNumIncr,proto3" json:"videoStarNumIncr,omitempty"`
	VideoShareNum       int64  `protobuf:"varint,17,opt,name=videoShareNum,proto3" json:"videoShareNum,omitempty"`
	VideoShareNumIncr   int64  `protobuf:"varint,18,opt,name=videoShareNumIncr,proto3" json:"videoShareNumIncr,omitempty"`
	ReadNum             int64  `protobuf:"varint,19,opt,name=readNum,proto3" json:"readNum,omitempty"`
	ReadNumIncr         int64  `protobuf:"varint,20,opt,name=readNumIncr,proto3" json:"readNumIncr,omitempty"`
	ReadCommentNum      int64  `protobuf:"varint,21,opt,name=readCommentNum,proto3" json:"readCommentNum,omitempty"`
	ReadCommentNumIncr  int64  `protobuf:"varint,22,opt,name=readCommentNumIncr,proto3" json:"readCommentNumIncr,omitempty"`
	ReadLikeNum         int64  `protobuf:"varint,23,opt,name=readLikeNum,proto3" json:"readLikeNum,omitempty"`
	ReadLikeNumIncr     int64  `protobuf:"varint,24,opt,name=readLikeNumIncr,proto3" json:"readLikeNumIncr,omitempty"`
	ReadStarNum         int64  `protobuf:"varint,25,opt,name=readStarNum,proto3" json:"readStarNum,omitempty"`
	ReadStarNumIncr     int64  `protobuf:"varint,26,opt,name=readStarNumIncr,proto3" json:"readStarNumIncr,omitempty"`
	ReadShareNum        int64  `protobuf:"varint,27,opt,name=readShareNum,proto3" json:"readShareNum,omitempty"`
	ReadShareNumIncr    int64  `protobuf:"varint,28,opt,name=readShareNumIncr,proto3" json:"readShareNumIncr,omitempty"`
}

func (x *UserInteractionQueryResp) Reset() {
	*x = UserInteractionQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInteractionQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInteractionQueryResp) ProtoMessage() {}

func (x *UserInteractionQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInteractionQueryResp.ProtoReflect.Descriptor instead.
func (*UserInteractionQueryResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserInteractionQueryResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInteractionQueryResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserInteractionQueryResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserInteractionQueryResp) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *UserInteractionQueryResp) GetPlayNum() int64 {
	if x != nil {
		return x.PlayNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetPlayNumIncr() int64 {
	if x != nil {
		return x.PlayNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoCommentNum() int64 {
	if x != nil {
		return x.VideoCommentNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoCommentNumIncr() int64 {
	if x != nil {
		return x.VideoCommentNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetDanmuNum() int64 {
	if x != nil {
		return x.DanmuNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetDanmuNumIncr() int64 {
	if x != nil {
		return x.DanmuNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoLikeNum() int64 {
	if x != nil {
		return x.VideoLikeNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoLikeNumIncr() int64 {
	if x != nil {
		return x.VideoLikeNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetCoinNum() int64 {
	if x != nil {
		return x.CoinNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetCoinNumIncr() int64 {
	if x != nil {
		return x.CoinNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoStarNum() int64 {
	if x != nil {
		return x.VideoStarNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoStarNumIncr() int64 {
	if x != nil {
		return x.VideoStarNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoShareNum() int64 {
	if x != nil {
		return x.VideoShareNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetVideoShareNumIncr() int64 {
	if x != nil {
		return x.VideoShareNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadNum() int64 {
	if x != nil {
		return x.ReadNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadNumIncr() int64 {
	if x != nil {
		return x.ReadNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadCommentNum() int64 {
	if x != nil {
		return x.ReadCommentNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadCommentNumIncr() int64 {
	if x != nil {
		return x.ReadCommentNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadLikeNum() int64 {
	if x != nil {
		return x.ReadLikeNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadLikeNumIncr() int64 {
	if x != nil {
		return x.ReadLikeNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadStarNum() int64 {
	if x != nil {
		return x.ReadStarNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadStarNumIncr() int64 {
	if x != nil {
		return x.ReadStarNumIncr
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadShareNum() int64 {
	if x != nil {
		return x.ReadShareNum
	}
	return 0
}

func (x *UserInteractionQueryResp) GetReadShareNumIncr() int64 {
	if x != nil {
		return x.ReadShareNumIncr
	}
	return 0
}

type PassChangeVerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *PassChangeVerifyReq) Reset() {
	*x = PassChangeVerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassChangeVerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassChangeVerifyReq) ProtoMessage() {}

func (x *PassChangeVerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassChangeVerifyReq.ProtoReflect.Descriptor instead.
func (*PassChangeVerifyReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *PassChangeVerifyReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PassChangeVerifyReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type PassChangeVerifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PassChangeVerifyResp) Reset() {
	*x = PassChangeVerifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassChangeVerifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassChangeVerifyResp) ProtoMessage() {}

func (x *PassChangeVerifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassChangeVerifyResp.ProtoReflect.Descriptor instead.
func (*PassChangeVerifyResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

type PassChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pass string `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
}

func (x *PassChangeReq) Reset() {
	*x = PassChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassChangeReq) ProtoMessage() {}

func (x *PassChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassChangeReq.ProtoReflect.Descriptor instead.
func (*PassChangeReq) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *PassChangeReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PassChangeReq) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

type PassChangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
}

func (x *PassChangeResp) Reset() {
	*x = PassChangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassChangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassChangeResp) ProtoMessage() {}

func (x *PassChangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassChangeResp.ProtoReflect.Descriptor instead.
func (*PassChangeResp) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *PassChangeResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PassChangeResp) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x49, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x22, 0x48, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xcb, 0x01, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4e, 0x75, 0x6d, 0x22, 0x1c, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xe5, 0x03, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd5,
	0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x49, 0x6d, 0x67,
	0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x49, 0x6d, 0x67,
	0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6b, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x88, 0x08, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x4e, 0x75,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x4e, 0x75,
	0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x4e, 0x75,
	0x6d, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75,
	0x6d, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74,
	0x61, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74,
	0x61, 0x72, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x75,
	0x6d, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x64, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x61, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75,
	0x6d, 0x49, 0x6e, 0x63, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x4e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x72, 0x65, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x63,
	0x72, 0x22, 0x3b, 0x0a, 0x13, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x16,
	0x0a, 0x14, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x35, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x22, 0x4a, 0x0a,
	0x0e, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xce, 0x03, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x0a, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x09,
	0x50, 0x61, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x11, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48,
	0x6f, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x14,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x10, 0x50, 0x61,
	0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x50,
	0x61, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_user_proto_goTypes = []interface{}{
	(*EmailLoginReq)(nil),            // 0: service.EmailLoginReq
	(*PassLoginReq)(nil),             // 1: service.PassLoginReq
	(*LoginResp)(nil),                // 2: service.LoginResp
	(*QueryReq)(nil),                 // 3: service.QueryReq
	(*UserQueryResp)(nil),            // 4: service.UserQueryResp
	(*UserHomeQueryResp)(nil),        // 5: service.UserHomeQueryResp
	(*UserInteractionQueryResp)(nil), // 6: service.UserInteractionQueryResp
	(*PassChangeVerifyReq)(nil),      // 7: service.PassChangeVerifyReq
	(*PassChangeVerifyResp)(nil),     // 8: service.PassChangeVerifyResp
	(*PassChangeReq)(nil),            // 9: service.PassChangeReq
	(*PassChangeResp)(nil),           // 10: service.PassChangeResp
}
var file_user_proto_depIdxs = []int32{
	0,  // 0: service.User.EmailLogin:input_type -> service.EmailLoginReq
	1,  // 1: service.User.PassLogin:input_type -> service.PassLoginReq
	3,  // 2: service.User.UserQuery:input_type -> service.QueryReq
	3,  // 3: service.User.UserHomeQuery:input_type -> service.QueryReq
	3,  // 4: service.User.UserInteractionQuery:input_type -> service.QueryReq
	7,  // 5: service.User.PassChangeVerify:input_type -> service.PassChangeVerifyReq
	9,  // 6: service.User.PassChange:input_type -> service.PassChangeReq
	2,  // 7: service.User.EmailLogin:output_type -> service.LoginResp
	2,  // 8: service.User.PassLogin:output_type -> service.LoginResp
	4,  // 9: service.User.UserQuery:output_type -> service.UserQueryResp
	5,  // 10: service.User.UserHomeQuery:output_type -> service.UserHomeQueryResp
	6,  // 11: service.User.UserInteractionQuery:output_type -> service.UserInteractionQueryResp
	8,  // 12: service.User.PassChangeVerify:output_type -> service.PassChangeVerifyResp
	10, // 13: service.User.PassChange:output_type -> service.PassChangeResp
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserHomeQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInteractionQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassChangeVerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassChangeVerifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassChangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
